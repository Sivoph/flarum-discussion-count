{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAY,I,aCY7DC,IAAAA,aAAAA,IAAqB,qCAAqC,WAExDA,IAAAA,cAAAA,IACO,8BACJC,gBACC,CACEC,QAAS,6CACTC,KAAM,WACNC,KAAM,SACNC,MAAOL,IAAAA,WAAAA,MAAqB,0DAE9B,Q","sources":["webpack://@datlechin/flarum-discussion-count/webpack/bootstrap","webpack://@datlechin/flarum-discussion-count/webpack/runtime/compat get default export","webpack://@datlechin/flarum-discussion-count/webpack/runtime/define property getters","webpack://@datlechin/flarum-discussion-count/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-discussion-count/webpack/runtime/make namespace object","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['app']\"","webpack://@datlechin/flarum-discussion-count/./src/admin/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","/*\r\n * This file is part of datlechin/flarum-discussion-count.\r\n *\r\n * Copyright (c) 2022d Datlechin.\r\n *\r\n * For the full copyright and license information, please view the LICENSE.md\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport app from 'flarum/app';\r\n\r\n\r\napp.initializers.add('datlechin/flarum-discussion-count', () => {\r\n\r\n  app.extensionData\r\n    .for('datlechin-discussion-count')\r\n    .registerSetting(\r\n      {\r\n        setting: 'datlechin-flarum-discussion-count.BarChart',\r\n        name: 'BarChart',\r\n        type: 'number',\r\n        label: app.translator.trans('Divisor Adjustment (Larger divisor for larger forums)'),\r\n      },\r\n      30 // Optional: Priority\r\n    )\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","registerSetting","setting","name","type","label"],"sourceRoot":""}