{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,+B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCSxDC,IAAAA,aAAAA,IAAqB,qCAAqC,YACxDC,EAAAA,EAAAA,UAASC,IAAAA,UAAyB,QAAQ,WACxC,IAAMC,EAAMC,KAAKC,MAAMC,MACjBC,EAAcJ,GAAOA,EAAII,cACzBC,EAAYC,IAAU,CAAC,gBAAiB,UAAWL,KAAKC,MAAMG,UAAWL,EAAIO,WAAa,UAC5FC,EAAWX,IAAAA,MAAAA,UAAoB,YAC7BY,EAAU,CACdC,gBAAiBV,EAAIW,QACrBC,MAAOZ,EAAIa,kBAAoBL,EAAW,IAC1CM,aAAc,kBACdC,QAAS,OAcX,OACE,EAAC,IAAD,CAAMV,UAAWA,EAAWW,KAAMf,KAAKC,MAAMe,MAAOC,MAAOlB,EAAM,CAAE,UAAWA,EAAIW,SAAY,GAAIQ,MAAOf,GAAe,IACxH,SAAKgB,MAAM,WAAWF,MAAOT,GAC5BY,IAAQrB,EAAK,CAAEK,UAAW,gBACzB,UAAMA,UAAU,gBACbL,EAAMA,EAAIsB,OAASzB,IAAAA,WAAAA,MAAqB,yCAD3C,KAfAG,EAAIa,kBAAoB,IAEpB,MAIDb,EAAIa,kBASP,WAONU,EAAAA,EAAAA,QAAOC,IAAAA,UAAoB,CAAC,aAAa,WACvC,IAAMC,EAAOxB,KAAKwB,KACDC,SAASC,iBAAiB,iBAElCC,SAAQ,SAAUC,GACzB,IAAMC,EAAUD,EAAKE,cAAc,iBAAiBC,UAC9ChC,EAAMyB,EAAKQ,MAAK,SAACjC,GAAD,OAASA,EAAIsB,SAAWQ,KACxCI,EAAWC,IAASnC,EAAIkC,YAAc,IACtCrB,EAAkBb,EAAIa,kBAENgB,EAAKF,iBAAiB,uBAE9BC,SAAQ,SAAUQ,GAC9B,IAAMC,EAAeD,EAAKJ,UACpBM,EAAWJ,EAASD,MAAK,SAACjC,GAAD,OAASA,EAAIsB,SAAWe,KACjDE,EAAuBD,EAASzB,kBACtCuB,EAAKJ,UAAeK,EAApB,KAAqCE,EAArC,OAGFV,EAAKE,cAAc,iBAAiBC,WAApC,KAAsDnB,EAAtD,c","sources":["webpack://@datlechin/flarum-discussion-count/webpack/bootstrap","webpack://@datlechin/flarum-discussion-count/webpack/runtime/compat get default export","webpack://@datlechin/flarum-discussion-count/webpack/runtime/define property getters","webpack://@datlechin/flarum-discussion-count/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-discussion-count/webpack/runtime/make namespace object","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['forum/app']\"","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['tags/components/TagLinkButton']\"","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['tags/components/TagsPage']\"","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['tags/common/helpers/tagIcon']\"","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['common/components/Link']\"","webpack://@datlechin/flarum-discussion-count/external root \"flarum.core.compat['tags/common/utils/sortTags']\"","webpack://@datlechin/flarum-discussion-count/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/components/TagLinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/components/TagsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/common/helpers/tagIcon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/common/utils/sortTags'];","import app from 'flarum/forum/app';\nimport { extend, override } from 'flarum/common/extend';\nimport TagLinkButton from 'flarum/tags/components/TagLinkButton';\nimport TagsPage from 'flarum/tags/components/TagsPage';\nimport classList from 'flarum/common/utils/classList';\nimport tagIcon from 'flarum/tags/common/helpers/tagIcon';\nimport Link from 'flarum/common/components/Link';\nimport sortTags from 'flarum/tags/common/utils/sortTags';\n\napp.initializers.add('datlechin/flarum-discussion-count', () => {\n  override(TagLinkButton.prototype, 'view', function () {\n    const tag = this.attrs.model;\n    const description = tag && tag.description();\n    const className = classList(['TagLinkButton', 'hasIcon', this.attrs.className, tag.isChild() && 'child']);\n    var barChart = app.forum.attribute('BarChart');\n    const myStyle = {\n      backgroundColor: tag.color(),\n      width: tag.discussionCount() / barChart + \"%\",\n      borderRadius: \"3px 0px 0px 3px\",\n      padding: \"5px\"\n     };\n     function showFoo() {\n     if(tag.discussionCount() > 1000){\n\n     return \"1k+\";\n\n     }else{\n\n    return tag.discussionCount();\n\n     }\n     }\n\n    return (\n      <Link className={className} href={this.attrs.route} style={tag ? { '--color': tag.color() } : ''} title={description || ''}>\n      <div class=\"bargraph\" style={myStyle}>\n      {tagIcon(tag, { className: 'Button-icon' })}\n        <span className=\"Button-label\">\n          {tag ? tag.name() : app.translator.trans('flarum-tags.forum.index.untagged_link')} ({showFoo()})\n        </span></div>\n      </Link>\n    );\n  });\n\n  extend(TagsPage.prototype, ['oncreate'], function () {\n    const tags = this.tags;\n    const tagsItem = document.querySelectorAll('.TagTile-info');\n\n    tagsItem.forEach(function (item) {\n      const tagName = item.querySelector('.TagTile-name').innerText;\n      const tag = tags.find((tag) => tag.name() === tagName);\n      const children = sortTags(tag.children() || []);\n      const discussionCount = tag.discussionCount();\n\n      const childrenLinks = item.querySelectorAll('.TagTile-children a');\n\n      childrenLinks.forEach(function (link) {\n        const childTagName = link.innerText;\n        const childTag = children.find((tag) => tag.name() === childTagName);\n        const childDiscussionCount = childTag.discussionCount();\n        link.innerText = `${childTagName} (${childDiscussionCount})`;\n      });\n\n      item.querySelector('.TagTile-name').innerText += ` (${discussionCount})`;\n    });\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","override","TagLinkButton","tag","this","attrs","model","description","className","classList","isChild","barChart","myStyle","backgroundColor","color","width","discussionCount","borderRadius","padding","href","route","style","title","class","tagIcon","name","extend","TagsPage","tags","document","querySelectorAll","forEach","item","tagName","querySelector","innerText","find","children","sortTags","link","childTagName","childTag","childDiscussionCount"],"sourceRoot":""}